
leds.elf:     file format elf32-msp430

SYMBOL TABLE:
0000ffe8 l    d  __interrupt_vector_5	00000000 __interrupt_vector_5
0000fffe l    d  __reset_vector	00000000 __reset_vector
00008000 l    d  .rodata	00000000 .rodata
00008010 l    d  .text	00000000 .text
00004000 l    d  .data	00000000 .data
00004012 l    d  .bss	00000000 .bss
00004024 l    d  .noinit	00000000 .noinit
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_macinfo	00000000 .debug_macinfo
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 /opt/ti/ccsv8/tools/compiler/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/../../../../msp430-elf/lib/430/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
0000806c l       .text	00000000 _msp430_run_array
0000807a l       .text	00000000 _msp430_run_done
00000000 l    df *ABS*	00000000 /opt/ti/ccsv8/tools/compiler/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/430/crtbegin.o
00008008 l     O .rodata	00000000 __CTOR_LIST__
0000800c l     O .rodata	00000000 __DTOR_LIST__
00008000 l     O .rodata	00000000 __EH_FRAME_BEGIN__
0000838e l     O .text	00000000 __TMC_LIST__
00008080 l     F .text	00000000 deregister_tm_clones
0000809a l     F .text	00000000 register_tm_clones
000080c8 l     F .text	00000000 __do_global_dtors_aux
00004012 l     O .bss	00000000 completed.3056
00004014 l     O .bss	00000000 dtor_idx.3058
00008116 l     F .text	00000000 call___do_global_dtors_aux
00008116 l     F .text	00000000 frame_dummy
00004016 l     O .bss	00000000 object.3071
0000812e l     F .text	00000000 call_frame_dummy
00000000 l    df *ABS*	00000000 /opt/ti/ccsv8/tools/compiler/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/430/crtend.o
0000800a l     O .rodata	00000000 __CTOR_END__
00008000 l     O .rodata	00000000 __FRAME_END__
00008358 l     F .text	00000000 __do_global_ctors_aux
00008372 l     F .text	00000000 call___do_global_ctors_aux
00000000 l    df *ABS*	00000000 crt_bss.o
00000000 l    df *ABS*	00000000 crt_movedata.o
00000000 l    df *ABS*	00000000 crt_main.o
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 lib_a-memmove.o
00000000 l    df *ABS*	00000000 lib_a-memset.o
00000000 l    df *ABS*	00000000 /opt/ti/ccsv8/tools/compiler/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/../../../../msp430-elf/lib/430/crtn.o
0000400a g     O .data	00000002 var5
0000826e g       .text	00000000 .hidden __mspabi_srli_9
000082be g       .text	00000000 .hidden __mspabi_srll_10
0000826a g       .text	00000000 .hidden __mspabi_srli_10
00008256 g       .text	00000000 .hidden __mspabi_srli_15
0000830a g     F .text	00000038 memmove
00008282 g       .text	00000000 .hidden __mspabi_srli_4
00008276 g       .text	00000000 .hidden __mspabi_srli_7
000082d0 g       .text	00000000 .hidden __mspabi_srll_7
000082e8 g       .text	00000000 .hidden __mspabi_srll_3
00008248 g       .text	00000000 .hidden __mspabi_func_epilog_6
0000838e g     O .text	00000000 .hidden __TMC_END__
000082ac g       .text	00000000 .hidden __mspabi_srll_13
0000800e g     O .rodata	00000000 .hidden __DTOR_END__
00008004 g       .rodata	00000000 __fini_array_end
00008262 g       .text	00000000 .hidden __mspabi_srli_12
00008010 g     F .text	00000004 __crt0_start
00004000 g     O .data	00000000 .hidden __dso_handle
00008014 g     F .text	0000000e __crt0_init_bss
00000012 g       *ABS*	00000000 __bsssize
00008036 g     F .text	0000000a __crt0_call_init_then_main
00004002 g     O .data	00000002 var1
00008252 g       .text	00000000 .hidden __mspabi_func_epilog_1
0000824e g       .text	00000000 .hidden __mspabi_func_epilog_3
000082dc g       .text	00000000 .hidden __mspabi_srll_5
0000829a g       .text	00000000 .hidden __mspabi_srli
00004008 g     O .data	00000002 var4
000082b8 g       .text	00000000 .hidden __mspabi_srll_11
00004010 g     O .data	00000002 var8
0000827e g       .text	00000000 .hidden __mspabi_srli_5
00000000  w      *UND*	00000000 __deregister_frame_info
00004024 g       .noinit	00000000 end
00000000  w      *UND*	00000000 _ITM_registerTMCloneTable
000082d6 g       .text	00000000 .hidden __mspabi_srll_6
00008010 g       .text	00000000 _start
0000805c g     F .text	00000000 _msp430_run_fini_array
0000828e g       .text	00000000 .hidden __mspabi_srli_1
000082a6 g       .text	00000000 .hidden __mspabi_srll_14
0000825a g       .text	00000000 .hidden __mspabi_srli_14
00000012 g       *ABS*	00000000 __romdatacopysize
00008266 g       .text	00000000 .hidden __mspabi_srli_11
00000000  w      *UND*	00000000 _ITM_deregisterTMCloneTable
00008004 g       .rodata	00000000 __fini_array_start
00000000  w      *ABS*	00000000 __rom_highdatacopysize
00008372 g       .text	00000000 __msp430_init
00008342 g     F .text	00000014 memset
000081c6 g     F .text	00000080 main
000082e2 g       .text	00000000 .hidden __mspabi_srll_4
00008004 g       .rodata	00000000 __init_array_end
0000828a g       .text	00000000 .hidden __mspabi_srli_2
00000000  w      *ABS*	00000000 __high_bsssize
00004004 g     O .data	00000002 var2
0000400c g     O .data	00000002 var6
00000000  w      *ABS*	00000000 __rom_highdatastart
00004006 g     O .data	00000002 var3
0000838e g       .text	00000000 __msp430_fini_end
000082b2 g       .text	00000000 .hidden __mspabi_srll_12
0000838e g       *ABS*	00000000 __romdatastart
0000400e g     O .data	00000002 var7
00008040 g     F .text	00000000 _msp430_run_init_array
0000827a g       .text	00000000 .hidden __mspabi_srli_6
00008004 g       .rodata	00000000 __preinit_array_end
00008286 g       .text	00000000 .hidden __mspabi_srli_3
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
00004012 g       .bss	00000000 __bssstart
0000824a g       .text	00000000 .hidden __mspabi_func_epilog_5
00008000 g       .noinit	00000000 __stack
0000812e g     F .text	00000098 INT_Qwark
000082c4 g       .text	00000000 .hidden __mspabi_srll_9
00004012 g       .data	00000000 _edata
00008384 g       .text	00000000 __msp430_init_end
00008304 g       .text	00000000 .hidden __mspabi_srll
00000000  w      *ABS*	00000000 __high_bssstart
000082a0 g       .text	00000000 .hidden __mspabi_srll_15
00008004 g       .rodata	00000000 __init_array_start
0000825e g       .text	00000000 .hidden __mspabi_srli_13
00004000 g       .data	00000000 __datastart
000082ca g       .text	00000000 .hidden __mspabi_srll_8
000082f4 g       .text	00000000 .hidden __mspabi_srll_1
00008004 g       .rodata	00000000 __preinit_array_start
00008022 g     F .text	00000014 __crt0_movedata
00008250 g       .text	00000000 .hidden __mspabi_func_epilog_2
00000000  w      *UND*	00000000 __register_frame_info
0000804e g     F .text	00000000 _msp430_run_preinit_array
00008246 g       .text	00000000 .hidden __mspabi_func_epilog_7
0000824c g       .text	00000000 .hidden __mspabi_func_epilog_4
000082ee g       .text	00000000 .hidden __mspabi_srll_2
00008384 g       .text	00000000 __msp430_fini
00008272 g       .text	00000000 .hidden __mspabi_srli_8



Disassembly of section __interrupt_vector_5:

0000ffe8 <__interrupt_vector_5>:
    ffe8:	2e 81       	interrupt service routine at 0x812e

Disassembly of section .text:

00008010 <__crt0_start>:
    8010:	31 40 00 80 	mov	#32768,	r1	;#0x8000

00008014 <__crt0_init_bss>:
    8014:	3c 40 12 40 	mov	#16402,	r12	;#0x4012

00008018 <.Loc.74.1>:
    8018:	0d 43       	clr	r13		;

0000801a <.Loc.75.1>:
    801a:	3e 40 12 00 	mov	#18,	r14	;#0x0012

0000801e <.Loc.79.1>:
    801e:	b0 12 42 83 	call	#33602		;#0x8342

00008022 <__crt0_movedata>:
    8022:	3c 40 00 40 	mov	#16384,	r12	;#0x4000

00008026 <.Loc.116.1>:
    8026:	3d 40 8e 83 	mov	#33678,	r13	;#0x838e

0000802a <.Loc.119.1>:
    802a:	0d 9c       	cmp	r12,	r13	;

0000802c <.Loc.120.1>:
    802c:	04 24       	jz	$+10     	;abs 0x8036

0000802e <.Loc.122.1>:
    802e:	3e 40 12 00 	mov	#18,	r14	;#0x0012

00008032 <.Loc.124.1>:
    8032:	b0 12 0a 83 	call	#33546		;#0x830a

00008036 <__crt0_call_init_then_main>:
    8036:	b0 12 72 83 	call	#33650		;#0x8372

0000803a <.Loc.196.1>:
    803a:	0c 43       	clr	r12		;

0000803c <.Loc.197.1>:
    803c:	b0 12 c6 81 	call	#33222		;#0x81c6

00008040 <_msp430_run_init_array>:
    8040:	34 40 04 80 	mov	#32772,	r4	;#0x8004

00008044 <.Loc.224.1>:
    8044:	35 40 04 80 	mov	#32772,	r5	;#0x8004

00008048 <.Loc.225.1>:
    8048:	26 43       	mov	#2,	r6	;r3 As==10

0000804a <.Loc.226.1>:
    804a:	30 40 6c 80 	br	#0x806c		;

0000804e <_msp430_run_preinit_array>:
    804e:	34 40 04 80 	mov	#32772,	r4	;#0x8004

00008052 <.Loc.232.1>:
    8052:	35 40 04 80 	mov	#32772,	r5	;#0x8004

00008056 <.Loc.233.1>:
    8056:	26 43       	mov	#2,	r6	;r3 As==10

00008058 <.Loc.234.1>:
    8058:	30 40 6c 80 	br	#0x806c		;

0000805c <_msp430_run_fini_array>:
    805c:	34 40 04 80 	mov	#32772,	r4	;#0x8004

00008060 <.Loc.240.1>:
    8060:	35 40 04 80 	mov	#32772,	r5	;#0x8004

00008064 <.Loc.241.1>:
    8064:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe

00008068 <.Loc.242.1>:
    8068:	30 40 6c 80 	br	#0x806c		;

0000806c <_msp430_run_array>:
    806c:	05 94       	cmp	r4,	r5	;

0000806e <.Loc.246.1>:
    806e:	05 24       	jz	$+12     	;abs 0x807a

00008070 <.Loc.247.1>:
    8070:	27 44       	mov	@r4,	r7	;

00008072 <.Loc.248.1>:
    8072:	04 56       	add	r6,	r4	;

00008074 <.Loc.249.1>:
    8074:	a7 12       	call	@r7		;

00008076 <.Loc.250.1>:
    8076:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x806c

0000807a <_msp430_run_done>:
    807a:	30 41       	ret			

0000807c <L0>:
    807c:	30 41       	ret			
    807e:	30 41       	ret			

00008080 <deregister_tm_clones>:
    8080:	3c 40 8e 83 	mov	#33678,	r12	;#0x838e
    8084:	3c 90 8e 83 	cmp	#33678,	r12	;#0x838e
    8088:	07 24       	jz	$+16     	;abs 0x8098
    808a:	3d 40 00 00 	mov	#0,	r13	;
    808e:	0d 93       	cmp	#0,	r13	;r3 As==00
    8090:	03 24       	jz	$+8      	;abs 0x8098
    8092:	3c 40 8e 83 	mov	#33678,	r12	;#0x838e
    8096:	8d 12       	call	r13		;

00008098 <.L1>:
    8098:	30 41       	ret			

0000809a <register_tm_clones>:
    809a:	0a 12       	push	r10		;
    809c:	3a 40 8e 83 	mov	#33678,	r10	;#0x838e
    80a0:	3a 80 8e 83 	sub	#33678,	r10	;#0x838e
    80a4:	0a 11       	rra	r10		;
    80a6:	0c 4a       	mov	r10,	r12	;
    80a8:	b0 12 56 82 	call	#33366		;#0x8256
    80ac:	0c 5a       	add	r10,	r12	;
    80ae:	0d 4c       	mov	r12,	r13	;
    80b0:	0d 11       	rra	r13		;
    80b2:	0d 93       	cmp	#0,	r13	;r3 As==00
    80b4:	07 24       	jz	$+16     	;abs 0x80c4
    80b6:	3e 40 00 00 	mov	#0,	r14	;
    80ba:	0e 93       	cmp	#0,	r14	;r3 As==00
    80bc:	03 24       	jz	$+8      	;abs 0x80c4
    80be:	3c 40 8e 83 	mov	#33678,	r12	;#0x838e
    80c2:	8e 12       	call	r14		;

000080c4 <.L9>:
    80c4:	3a 41       	pop	r10		;
    80c6:	30 41       	ret			

000080c8 <__do_global_dtors_aux>:
    80c8:	0a 12       	push	r10		;
    80ca:	09 12       	push	r9		;
    80cc:	c2 93 12 40 	cmp.b	#0,	&0x4012	;r3 As==00
    80d0:	17 20       	jnz	$+48     	;abs 0x8100
    80d2:	3a 40 0e 80 	mov	#32782,	r10	;#0x800e
    80d6:	3a 80 0c 80 	sub	#32780,	r10	;#0x800c
    80da:	0a 11       	rra	r10		;
    80dc:	3a 53       	add	#-1,	r10	;r3 As==11
    80de:	39 40 0c 80 	mov	#32780,	r9	;#0x800c

000080e2 <.L19>:
    80e2:	1c 42 14 40 	mov	&0x4014,r12	;0x4014
    80e6:	0c 9a       	cmp	r10,	r12	;
    80e8:	0d 28       	jnc	$+28     	;abs 0x8104
    80ea:	b0 12 80 80 	call	#32896		;#0x8080
    80ee:	3d 40 00 00 	mov	#0,	r13	;
    80f2:	0d 93       	cmp	#0,	r13	;r3 As==00
    80f4:	03 24       	jz	$+8      	;abs 0x80fc
    80f6:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    80fa:	8d 12       	call	r13		;

000080fc <.L21>:
    80fc:	d2 43 12 40 	mov.b	#1,	&0x4012	;r3 As==01

00008100 <.L17>:
    8100:	30 40 50 82 	br	#0x8250		;

00008104 <.L20>:
    8104:	1c 53       	inc	r12		;
    8106:	82 4c 14 40 	mov	r12,	&0x4014	;
    810a:	0c 5c       	rla	r12		;
    810c:	0c 59       	add	r9,	r12	;
    810e:	2c 4c       	mov	@r12,	r12	;
    8110:	8c 12       	call	r12		;
    8112:	30 40 e2 80 	br	#0x80e2		;

00008116 <call___do_global_dtors_aux>:
    8116:	3e 40 00 00 	mov	#0,	r14	;
    811a:	0e 93       	cmp	#0,	r14	;r3 As==00
    811c:	05 24       	jz	$+12     	;abs 0x8128
    811e:	3d 40 16 40 	mov	#16406,	r13	;#0x4016
    8122:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    8126:	8e 12       	call	r14		;

00008128 <.L27>:
    8128:	b0 12 9a 80 	call	#32922		;#0x809a
    812c:	30 41       	ret			

0000812e <INT_Qwark>:
#define QWARK_VECTOR (5)

//--------------------------------------------------//
//    Checkpoint Procedure                          //
//--------------------------------------------------//
interrupt (QWARK_VECTOR) INT_Qwark(void) {
    812e:	0d 12       	push	r13		;

00008130 <.LCFI0>:
    8130:	0c 12       	push	r12		;

00008132 <.LCFI1>:
	
	//Disable Idempotency Tracking
	QWARK_CTL = 0x00;
    8132:	3c 40 90 01 	mov	#400,	r12	;#0x0190
    8136:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00

0000813a <.Loc.28.1>:
	LED_CTRL = 0x0F;
    813a:	7c 40 90 00 	mov.b	#144,	r12	;#0x0090
    813e:	fc 40 0f 00 	mov.b	#15,	0(r12)	;#0x000f
    8142:	00 00 

00008144 <.Loc.31.1>:

	// Write back values into memory
	(*(volatile unsigned int  *) 0x4002) = (*(volatile unsigned int  *) 0x6000);
    8144:	3d 40 00 60 	mov	#24576,	r13	;#0x6000
    8148:	3c 40 02 40 	mov	#16386,	r12	;#0x4002
    814c:	2d 4d       	mov	@r13,	r13	;
    814e:	8c 4d 00 00 	mov	r13,	0(r12)	;

00008152 <.Loc.32.1>:
	(*(volatile unsigned int  *) 0x4004) = (*(volatile unsigned int  *) 0x6002);
    8152:	3d 40 02 60 	mov	#24578,	r13	;#0x6002
    8156:	3c 40 04 40 	mov	#16388,	r12	;#0x4004
    815a:	2d 4d       	mov	@r13,	r13	;
    815c:	8c 4d 00 00 	mov	r13,	0(r12)	;

00008160 <.Loc.33.1>:
	(*(volatile unsigned int  *) 0x4006) = (*(volatile unsigned int  *) 0x6004);
    8160:	3d 40 04 60 	mov	#24580,	r13	;#0x6004
    8164:	3c 40 06 40 	mov	#16390,	r12	;#0x4006
    8168:	2d 4d       	mov	@r13,	r13	;
    816a:	8c 4d 00 00 	mov	r13,	0(r12)	;

0000816e <.Loc.34.1>:
	(*(volatile unsigned int  *) 0x4008) = (*(volatile unsigned int  *) 0x6006);
    816e:	3d 40 06 60 	mov	#24582,	r13	;#0x6006
    8172:	3c 40 08 40 	mov	#16392,	r12	;#0x4008
    8176:	2d 4d       	mov	@r13,	r13	;
    8178:	8c 4d 00 00 	mov	r13,	0(r12)	;

0000817c <.Loc.35.1>:
	(*(volatile unsigned int  *) 0x400A) = (*(volatile unsigned int  *) 0x6008);
    817c:	3d 40 08 60 	mov	#24584,	r13	;#0x6008
    8180:	3c 40 0a 40 	mov	#16394,	r12	;#0x400a
    8184:	2d 4d       	mov	@r13,	r13	;
    8186:	8c 4d 00 00 	mov	r13,	0(r12)	;

0000818a <.Loc.36.1>:
	(*(volatile unsigned int  *) 0x400C) = (*(volatile unsigned int  *) 0x600A);
    818a:	3d 40 0a 60 	mov	#24586,	r13	;#0x600a
    818e:	3c 40 0c 40 	mov	#16396,	r12	;#0x400c
    8192:	2d 4d       	mov	@r13,	r13	;
    8194:	8c 4d 00 00 	mov	r13,	0(r12)	;

00008198 <.Loc.37.1>:
	(*(volatile unsigned int  *) 0x400E) = (*(volatile unsigned int  *) 0x600C);
    8198:	3d 40 0c 60 	mov	#24588,	r13	;#0x600c
    819c:	3c 40 0e 40 	mov	#16398,	r12	;#0x400e
    81a0:	2d 4d       	mov	@r13,	r13	;
    81a2:	8c 4d 00 00 	mov	r13,	0(r12)	;

000081a6 <.Loc.38.1>:
	(*(volatile unsigned int  *) 0x4010) = (*(volatile unsigned int  *) 0x600E);
    81a6:	3d 40 0e 60 	mov	#24590,	r13	;#0x600e
    81aa:	3c 40 10 40 	mov	#16400,	r12	;#0x4010
    81ae:	2d 4d       	mov	@r13,	r13	;
    81b0:	8c 4d 00 00 	mov	r13,	0(r12)	;

000081b4 <.Loc.39.1>:
	LED_CTRL = 0xF0;
    81b4:	7c 40 90 00 	mov.b	#144,	r12	;#0x0090
    81b8:	fc 40 f0 ff 	mov.b	#65520,	0(r12)	;#0xfff0
    81bc:	00 00 

000081be <.Loc.40.1>:
}
    81be:	03 43       	nop			
    81c0:	3c 41       	pop	r12		;
    81c2:	3d 41       	pop	r13		;
    81c4:	00 13       	reti			

000081c6 <main>:

int main()
{

	//Enable Idempotency Tracking
  	eint();
    81c6:	32 d2       	eint			
    81c8:	03 43       	nop			

000081ca <.Loc.47.1>:
	QWARK_CTL = 0x01;
    81ca:	3c 40 90 01 	mov	#400,	r12	;#0x0190
    81ce:	9c 43 00 00 	mov	#1,	0(r12)	;r3 As==01

000081d2 <.Loc.51.1>:



	if(var1){
    81d2:	1c 42 02 40 	mov	&0x4002,r12	;0x4002
    81d6:	0c 93       	cmp	#0,	r12	;r3 As==00
    81d8:	03 24       	jz	$+8      	;abs 0x81e0

000081da <.Loc.52.1>:
	  var1 = 0xAA;
    81da:	b2 40 aa 00 	mov	#170,	&0x4002	;#0x00aa
    81de:	02 40 

000081e0 <.L3>:
	}

	if(var2){
    81e0:	1c 42 04 40 	mov	&0x4004,r12	;0x4004
    81e4:	0c 93       	cmp	#0,	r12	;r3 As==00
    81e6:	03 24       	jz	$+8      	;abs 0x81ee

000081e8 <.Loc.56.1>:
	  var2 = 0xBB;
    81e8:	b2 40 bb 00 	mov	#187,	&0x4004	;#0x00bb
    81ec:	04 40 

000081ee <.L4>:
	}

	if(var3){
    81ee:	1c 42 06 40 	mov	&0x4006,r12	;0x4006
    81f2:	0c 93       	cmp	#0,	r12	;r3 As==00
    81f4:	03 24       	jz	$+8      	;abs 0x81fc

000081f6 <.Loc.60.1>:
	  var3 = 0xCC;
    81f6:	b2 40 cc 00 	mov	#204,	&0x4006	;#0x00cc
    81fa:	06 40 

000081fc <.L5>:
	}

	if(var4){
    81fc:	1c 42 08 40 	mov	&0x4008,r12	;0x4008
    8200:	0c 93       	cmp	#0,	r12	;r3 As==00
    8202:	03 24       	jz	$+8      	;abs 0x820a

00008204 <.Loc.64.1>:
	  var4 = 0xDD;
    8204:	b2 40 dd 00 	mov	#221,	&0x4008	;#0x00dd
    8208:	08 40 

0000820a <.L6>:
	}

	if(var5){
    820a:	1c 42 0a 40 	mov	&0x400a,r12	;0x400a
    820e:	0c 93       	cmp	#0,	r12	;r3 As==00
    8210:	03 24       	jz	$+8      	;abs 0x8218

00008212 <.Loc.68.1>:
	  var5 = 0xEE;
    8212:	b2 40 ee 00 	mov	#238,	&0x400a	;#0x00ee
    8216:	0a 40 

00008218 <.L7>:
	}

	if(var6){
    8218:	1c 42 0c 40 	mov	&0x400c,r12	;0x400c
    821c:	0c 93       	cmp	#0,	r12	;r3 As==00
    821e:	03 24       	jz	$+8      	;abs 0x8226

00008220 <.Loc.72.1>:
	  var6 = 0xFF;
    8220:	b2 40 ff 00 	mov	#255,	&0x400c	;#0x00ff
    8224:	0c 40 

00008226 <.L8>:
	}

	if(var7){
    8226:	1c 42 0e 40 	mov	&0x400e,r12	;0x400e
    822a:	0c 93       	cmp	#0,	r12	;r3 As==00
    822c:	03 24       	jz	$+8      	;abs 0x8234

0000822e <.Loc.76.1>:
	  var7 = 0x55;
    822e:	b2 40 55 00 	mov	#85,	&0x400e	;#0x0055
    8232:	0e 40 

00008234 <.L9>:
	}

	if(var8){
    8234:	1c 42 10 40 	mov	&0x4010,r12	;0x4010
    8238:	0c 93       	cmp	#0,	r12	;r3 As==00
    823a:	03 24       	jz	$+8      	;abs 0x8242

0000823c <.Loc.80.1>:
	  var8 = 0x66;
    823c:	b2 40 66 00 	mov	#102,	&0x4010	;#0x0066
    8240:	10 40 

00008242 <.L10>:
	}

	
	while(1);
    8242:	30 40 42 82 	br	#0x8242		;

00008246 <__mspabi_func_epilog_7>:
    8246:	34 41       	pop	r4		;

00008248 <__mspabi_func_epilog_6>:
    8248:	35 41       	pop	r5		;

0000824a <__mspabi_func_epilog_5>:
    824a:	36 41       	pop	r6		;

0000824c <__mspabi_func_epilog_4>:
    824c:	37 41       	pop	r7		;

0000824e <__mspabi_func_epilog_3>:
    824e:	38 41       	pop	r8		;

00008250 <__mspabi_func_epilog_2>:
    8250:	39 41       	pop	r9		;

00008252 <__mspabi_func_epilog_1>:
    8252:	3a 41       	pop	r10		;
    8254:	30 41       	ret			

00008256 <__mspabi_srli_15>:
    8256:	12 c3       	clrc			
    8258:	0c 10       	rrc	r12		;

0000825a <__mspabi_srli_14>:
    825a:	12 c3       	clrc			
    825c:	0c 10       	rrc	r12		;

0000825e <__mspabi_srli_13>:
    825e:	12 c3       	clrc			
    8260:	0c 10       	rrc	r12		;

00008262 <__mspabi_srli_12>:
    8262:	12 c3       	clrc			
    8264:	0c 10       	rrc	r12		;

00008266 <__mspabi_srli_11>:
    8266:	12 c3       	clrc			
    8268:	0c 10       	rrc	r12		;

0000826a <__mspabi_srli_10>:
    826a:	12 c3       	clrc			
    826c:	0c 10       	rrc	r12		;

0000826e <__mspabi_srli_9>:
    826e:	12 c3       	clrc			
    8270:	0c 10       	rrc	r12		;

00008272 <__mspabi_srli_8>:
    8272:	12 c3       	clrc			
    8274:	0c 10       	rrc	r12		;

00008276 <__mspabi_srli_7>:
    8276:	12 c3       	clrc			
    8278:	0c 10       	rrc	r12		;

0000827a <__mspabi_srli_6>:
    827a:	12 c3       	clrc			
    827c:	0c 10       	rrc	r12		;

0000827e <__mspabi_srli_5>:
    827e:	12 c3       	clrc			
    8280:	0c 10       	rrc	r12		;

00008282 <__mspabi_srli_4>:
    8282:	12 c3       	clrc			
    8284:	0c 10       	rrc	r12		;

00008286 <__mspabi_srli_3>:
    8286:	12 c3       	clrc			
    8288:	0c 10       	rrc	r12		;

0000828a <__mspabi_srli_2>:
    828a:	12 c3       	clrc			
    828c:	0c 10       	rrc	r12		;

0000828e <__mspabi_srli_1>:
    828e:	12 c3       	clrc			
    8290:	0c 10       	rrc	r12		;
    8292:	30 41       	ret			

00008294 <.L11>:
    8294:	3d 53       	add	#-1,	r13	;r3 As==11
    8296:	12 c3       	clrc			
    8298:	0c 10       	rrc	r12		;

0000829a <__mspabi_srli>:
    829a:	0d 93       	cmp	#0,	r13	;r3 As==00
    829c:	fb 23       	jnz	$-8      	;abs 0x8294
    829e:	30 41       	ret			

000082a0 <__mspabi_srll_15>:
    82a0:	12 c3       	clrc			
    82a2:	0d 10       	rrc	r13		;
    82a4:	0c 10       	rrc	r12		;

000082a6 <__mspabi_srll_14>:
    82a6:	12 c3       	clrc			
    82a8:	0d 10       	rrc	r13		;
    82aa:	0c 10       	rrc	r12		;

000082ac <__mspabi_srll_13>:
    82ac:	12 c3       	clrc			
    82ae:	0d 10       	rrc	r13		;
    82b0:	0c 10       	rrc	r12		;

000082b2 <__mspabi_srll_12>:
    82b2:	12 c3       	clrc			
    82b4:	0d 10       	rrc	r13		;
    82b6:	0c 10       	rrc	r12		;

000082b8 <__mspabi_srll_11>:
    82b8:	12 c3       	clrc			
    82ba:	0d 10       	rrc	r13		;
    82bc:	0c 10       	rrc	r12		;

000082be <__mspabi_srll_10>:
    82be:	12 c3       	clrc			
    82c0:	0d 10       	rrc	r13		;
    82c2:	0c 10       	rrc	r12		;

000082c4 <__mspabi_srll_9>:
    82c4:	12 c3       	clrc			
    82c6:	0d 10       	rrc	r13		;
    82c8:	0c 10       	rrc	r12		;

000082ca <__mspabi_srll_8>:
    82ca:	12 c3       	clrc			
    82cc:	0d 10       	rrc	r13		;
    82ce:	0c 10       	rrc	r12		;

000082d0 <__mspabi_srll_7>:
    82d0:	12 c3       	clrc			
    82d2:	0d 10       	rrc	r13		;
    82d4:	0c 10       	rrc	r12		;

000082d6 <__mspabi_srll_6>:
    82d6:	12 c3       	clrc			
    82d8:	0d 10       	rrc	r13		;
    82da:	0c 10       	rrc	r12		;

000082dc <__mspabi_srll_5>:
    82dc:	12 c3       	clrc			
    82de:	0d 10       	rrc	r13		;
    82e0:	0c 10       	rrc	r12		;

000082e2 <__mspabi_srll_4>:
    82e2:	12 c3       	clrc			
    82e4:	0d 10       	rrc	r13		;
    82e6:	0c 10       	rrc	r12		;

000082e8 <__mspabi_srll_3>:
    82e8:	12 c3       	clrc			
    82ea:	0d 10       	rrc	r13		;
    82ec:	0c 10       	rrc	r12		;

000082ee <__mspabi_srll_2>:
    82ee:	12 c3       	clrc			
    82f0:	0d 10       	rrc	r13		;
    82f2:	0c 10       	rrc	r12		;

000082f4 <__mspabi_srll_1>:
    82f4:	12 c3       	clrc			
    82f6:	0d 10       	rrc	r13		;
    82f8:	0c 10       	rrc	r12		;
    82fa:	30 41       	ret			

000082fc <.L12>:
    82fc:	3e 53       	add	#-1,	r14	;r3 As==11
    82fe:	12 c3       	clrc			
    8300:	0d 10       	rrc	r13		;
    8302:	0c 10       	rrc	r12		;

00008304 <__mspabi_srll>:
    8304:	0e 93       	cmp	#0,	r14	;r3 As==00
    8306:	fa 23       	jnz	$-10     	;abs 0x82fc
    8308:	30 41       	ret			

0000830a <memmove>:
    830a:	0d 9c       	cmp	r12,	r13	;
    830c:	0a 28       	jnc	$+22     	;abs 0x8322

0000830e <.L5>:
    830e:	0f 4c       	mov	r12,	r15	;
    8310:	0e 5c       	add	r12,	r14	;

00008312 <.L3>:
    8312:	0e 9f       	cmp	r15,	r14	;
    8314:	0d 24       	jz	$+28     	;abs 0x8330

00008316 <.LVL3>:
    8316:	ef 4d 00 00 	mov.b	@r13,	0(r15)	;
    831a:	1f 53       	inc	r15		;

0000831c <.LVL4>:
    831c:	1d 53       	inc	r13		;
    831e:	30 40 12 83 	br	#0x8312		;

00008322 <.L2>:
    8322:	0f 4d       	mov	r13,	r15	;
    8324:	0f 5e       	add	r14,	r15	;
    8326:	0c 9f       	cmp	r15,	r12	;
    8328:	f2 2f       	jc	$-26     	;abs 0x830e

0000832a <.L4>:
    832a:	3e 53       	add	#-1,	r14	;r3 As==11

0000832c <.LVL7>:
    832c:	3e 93       	cmp	#-1,	r14	;r3 As==11
    832e:	01 20       	jnz	$+4      	;abs 0x8332

00008330 <.L10>:
    8330:	30 41       	ret			

00008332 <.L6>:
    8332:	0b 4c       	mov	r12,	r11	;
    8334:	0b 5e       	add	r14,	r11	;
    8336:	0f 4d       	mov	r13,	r15	;
    8338:	0f 5e       	add	r14,	r15	;
    833a:	eb 4f 00 00 	mov.b	@r15,	0(r11)	;
    833e:	30 40 2a 83 	br	#0x832a		;

00008342 <memset>:
    8342:	0f 4c       	mov	r12,	r15	;
    8344:	0e 5c       	add	r12,	r14	;

00008346 <.L2>:
    8346:	0f 9e       	cmp	r14,	r15	;
    8348:	01 20       	jnz	$+4      	;abs 0x834c

0000834a <.Loc.104.1>:
    834a:	30 41       	ret			

0000834c <.L3>:
    834c:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    8350:	1f 53       	inc	r15		;

00008352 <.LVL4>:
    8352:	30 40 46 83 	br	#0x8346		;

00008356 <L0>:
    8356:	30 41       	ret			

00008358 <__do_global_ctors_aux>:
    8358:	0a 12       	push	r10		;
    835a:	3a 40 08 80 	mov	#32776,	r10	;#0x8008

0000835e <.L2>:
    835e:	2c 4a       	mov	@r10,	r12	;
    8360:	3c 93       	cmp	#-1,	r12	;r3 As==11
    8362:	02 20       	jnz	$+6      	;abs 0x8368
    8364:	3a 41       	pop	r10		;
    8366:	30 41       	ret			

00008368 <.L3>:
    8368:	8c 12       	call	r12		;
    836a:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    836e:	30 40 5e 83 	br	#0x835e		;

00008372 <call___do_global_ctors_aux>:
    8372:	b0 12 16 81 	call	#33046		;#0x8116
    8376:	b0 12 58 83 	call	#33624		;#0x8358

0000837a <L0>:
    837a:	b0 12 4e 80 	call	#32846		;#0x804e

0000837e <.Loc.19.1>:
    837e:	b0 12 40 80 	call	#32832		;#0x8040

00008382 <.Loc.20.1>:
    8382:	30 41       	ret			

00008384 <__msp430_fini>:
    8384:	b0 12 5c 80 	call	#32860		;#0x805c

00008388 <L0>:
    8388:	b0 12 c8 80 	call	#32968		;#0x80c8

0000838c <L0>:
    838c:	30 41       	ret			
