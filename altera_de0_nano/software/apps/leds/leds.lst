
leds.elf:     file format elf32-msp430

SYMBOL TABLE:
0000fffe l    d  __reset_vector	00000000 __reset_vector
00008000 l    d  .rodata	00000000 .rodata
00008010 l    d  .text	00000000 .text
00004000 l    d  .data	00000000 .data
00004008 l    d  .bss	00000000 .bss
00004022 l    d  .noinit	00000000 .noinit
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_macinfo	00000000 .debug_macinfo
00000000 l    df *ABS*	00000000 /opt/ti/ccsv8/tools/compiler/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/../../../../msp430-elf/lib/430/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
0000806c l       .text	00000000 _msp430_run_array
0000807a l       .text	00000000 _msp430_run_done
00000000 l    df *ABS*	00000000 /opt/ti/ccsv8/tools/compiler/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/430/crtbegin.o
00008008 l     O .rodata	00000000 __CTOR_LIST__
0000800c l     O .rodata	00000000 __DTOR_LIST__
00008000 l     O .rodata	00000000 __EH_FRAME_BEGIN__
000082c6 l     O .text	00000000 __TMC_LIST__
00008080 l     F .text	00000000 deregister_tm_clones
0000809a l     F .text	00000000 register_tm_clones
000080c8 l     F .text	00000000 __do_global_dtors_aux
00004008 l     O .bss	00000000 completed.3056
0000400a l     O .bss	00000000 dtor_idx.3058
00008116 l     F .text	00000000 call___do_global_dtors_aux
00008116 l     F .text	00000000 frame_dummy
0000400c l     O .bss	00000000 object.3071
0000812e l     F .text	00000000 call_frame_dummy
00000000 l    df *ABS*	00000000 /opt/ti/ccsv8/tools/compiler/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/430/crtend.o
0000800a l     O .rodata	00000000 __CTOR_END__
00008000 l     O .rodata	00000000 __FRAME_END__
00008290 l     F .text	00000000 __do_global_ctors_aux
000082aa l     F .text	00000000 call___do_global_ctors_aux
00000000 l    df *ABS*	00000000 crt_bss.o
00000000 l    df *ABS*	00000000 crt_movedata.o
00000000 l    df *ABS*	00000000 crt_main.o
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 lib_a-memmove.o
00000000 l    df *ABS*	00000000 lib_a-memset.o
00000000 l    df *ABS*	00000000 /opt/ti/ccsv8/tools/compiler/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/../../../../msp430-elf/lib/430/crtn.o
0000401a g     O .bss	00000002 var5
000081a6 g       .text	00000000 .hidden __mspabi_srli_9
000081f6 g       .text	00000000 .hidden __mspabi_srll_10
000081a2 g       .text	00000000 .hidden __mspabi_srli_10
0000812e g     F .text	00000026 dummy_wait
0000818e g       .text	00000000 .hidden __mspabi_srli_15
00008242 g     F .text	00000038 memmove
000081ba g       .text	00000000 .hidden __mspabi_srli_4
000081ae g       .text	00000000 .hidden __mspabi_srli_7
00008208 g       .text	00000000 .hidden __mspabi_srll_7
00008220 g       .text	00000000 .hidden __mspabi_srll_3
00008180 g       .text	00000000 .hidden __mspabi_func_epilog_6
000082c6 g     O .text	00000000 .hidden __TMC_END__
000081e4 g       .text	00000000 .hidden __mspabi_srll_13
0000800e g     O .rodata	00000000 .hidden __DTOR_END__
00008004 g       .rodata	00000000 __fini_array_end
0000819a g       .text	00000000 .hidden __mspabi_srli_12
00008010 g     F .text	00000004 __crt0_start
00004000 g     O .data	00000000 .hidden __dso_handle
00008014 g     F .text	0000000e __crt0_init_bss
0000001a g       *ABS*	00000000 __bsssize
00008036 g     F .text	0000000a __crt0_call_init_then_main
0000401c g     O .bss	00000002 var1
0000818a g       .text	00000000 .hidden __mspabi_func_epilog_1
00008186 g       .text	00000000 .hidden __mspabi_func_epilog_3
00008214 g       .text	00000000 .hidden __mspabi_srll_5
000081d2 g       .text	00000000 .hidden __mspabi_srli
0000401e g     O .bss	00000002 var4
000081f0 g       .text	00000000 .hidden __mspabi_srll_11
000081b6 g       .text	00000000 .hidden __mspabi_srli_5
00000000  w      *UND*	00000000 __deregister_frame_info
00004022 g       .noinit	00000000 end
00000000  w      *UND*	00000000 _ITM_registerTMCloneTable
0000820e g       .text	00000000 .hidden __mspabi_srll_6
00008010 g       .text	00000000 _start
0000805c g     F .text	00000000 _msp430_run_fini_array
000081c6 g       .text	00000000 .hidden __mspabi_srli_1
000081de g       .text	00000000 .hidden __mspabi_srll_14
00008192 g       .text	00000000 .hidden __mspabi_srli_14
00000008 g       *ABS*	00000000 __romdatacopysize
0000819e g       .text	00000000 .hidden __mspabi_srli_11
00000000  w      *UND*	00000000 _ITM_deregisterTMCloneTable
00008004 g       .rodata	00000000 __fini_array_start
00000000  w      *ABS*	00000000 __rom_highdatacopysize
000082aa g       .text	00000000 __msp430_init
0000827a g     F .text	00000014 memset
00008154 g     F .text	0000002a main
0000821a g       .text	00000000 .hidden __mspabi_srll_4
00008004 g       .rodata	00000000 __init_array_end
000081c2 g       .text	00000000 .hidden __mspabi_srli_2
00000000  w      *ABS*	00000000 __high_bsssize
00004020 g     O .bss	00000002 var2
00000000  w      *ABS*	00000000 __rom_highdatastart
00004006 g     O .data	00000002 var3
000082c6 g       .text	00000000 __msp430_fini_end
000081ea g       .text	00000000 .hidden __mspabi_srll_12
000082c6 g       *ABS*	00000000 __romdatastart
00008040 g     F .text	00000000 _msp430_run_init_array
000081b2 g       .text	00000000 .hidden __mspabi_srli_6
00008004 g       .rodata	00000000 __preinit_array_end
00004002 g     O .data	00000002 u16_nv_read
000081be g       .text	00000000 .hidden __mspabi_srli_3
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
00004008 g       .bss	00000000 __bssstart
00008182 g       .text	00000000 .hidden __mspabi_func_epilog_5
00004004 g     O .data	00000002 redirected
00008000 g       .noinit	00000000 __stack
000081fc g       .text	00000000 .hidden __mspabi_srll_9
00004008 g       .data	00000000 _edata
000082bc g       .text	00000000 __msp430_init_end
0000823c g       .text	00000000 .hidden __mspabi_srll
00000000  w      *ABS*	00000000 __high_bssstart
000081d8 g       .text	00000000 .hidden __mspabi_srll_15
00008004 g       .rodata	00000000 __init_array_start
00008196 g       .text	00000000 .hidden __mspabi_srli_13
00004000 g       .data	00000000 __datastart
00008202 g       .text	00000000 .hidden __mspabi_srll_8
0000822c g       .text	00000000 .hidden __mspabi_srll_1
00008004 g       .rodata	00000000 __preinit_array_start
00008022 g     F .text	00000014 __crt0_movedata
00008188 g       .text	00000000 .hidden __mspabi_func_epilog_2
00000000  w      *UND*	00000000 __register_frame_info
0000804e g     F .text	00000000 _msp430_run_preinit_array
0000817e g       .text	00000000 .hidden __mspabi_func_epilog_7
00008184 g       .text	00000000 .hidden __mspabi_func_epilog_4
00008226 g       .text	00000000 .hidden __mspabi_srll_2
000082bc g       .text	00000000 __msp430_fini
000081aa g       .text	00000000 .hidden __mspabi_srli_8



Disassembly of section .text:

00008010 <__crt0_start>:
    8010:	31 40 00 80 	mov	#32768,	r1	;#0x8000

00008014 <__crt0_init_bss>:
    8014:	3c 40 08 40 	mov	#16392,	r12	;#0x4008

00008018 <.Loc.74.1>:
    8018:	0d 43       	clr	r13		;

0000801a <.Loc.75.1>:
    801a:	3e 40 1a 00 	mov	#26,	r14	;#0x001a

0000801e <.Loc.79.1>:
    801e:	b0 12 7a 82 	call	#33402		;#0x827a

00008022 <__crt0_movedata>:
    8022:	3c 40 00 40 	mov	#16384,	r12	;#0x4000

00008026 <.Loc.116.1>:
    8026:	3d 40 c6 82 	mov	#33478,	r13	;#0x82c6

0000802a <.Loc.119.1>:
    802a:	0d 9c       	cmp	r12,	r13	;

0000802c <.Loc.120.1>:
    802c:	04 24       	jz	$+10     	;abs 0x8036

0000802e <.Loc.122.1>:
    802e:	3e 40 08 00 	mov	#8,	r14	;

00008032 <.Loc.124.1>:
    8032:	b0 12 42 82 	call	#33346		;#0x8242

00008036 <__crt0_call_init_then_main>:
    8036:	b0 12 aa 82 	call	#33450		;#0x82aa

0000803a <.Loc.196.1>:
    803a:	0c 43       	clr	r12		;

0000803c <.Loc.197.1>:
    803c:	b0 12 54 81 	call	#33108		;#0x8154

00008040 <_msp430_run_init_array>:
    8040:	34 40 04 80 	mov	#32772,	r4	;#0x8004

00008044 <.Loc.224.1>:
    8044:	35 40 04 80 	mov	#32772,	r5	;#0x8004

00008048 <.Loc.225.1>:
    8048:	26 43       	mov	#2,	r6	;r3 As==10

0000804a <.Loc.226.1>:
    804a:	30 40 6c 80 	br	#0x806c		;

0000804e <_msp430_run_preinit_array>:
    804e:	34 40 04 80 	mov	#32772,	r4	;#0x8004

00008052 <.Loc.232.1>:
    8052:	35 40 04 80 	mov	#32772,	r5	;#0x8004

00008056 <.Loc.233.1>:
    8056:	26 43       	mov	#2,	r6	;r3 As==10

00008058 <.Loc.234.1>:
    8058:	30 40 6c 80 	br	#0x806c		;

0000805c <_msp430_run_fini_array>:
    805c:	34 40 04 80 	mov	#32772,	r4	;#0x8004

00008060 <.Loc.240.1>:
    8060:	35 40 04 80 	mov	#32772,	r5	;#0x8004

00008064 <.Loc.241.1>:
    8064:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe

00008068 <.Loc.242.1>:
    8068:	30 40 6c 80 	br	#0x806c		;

0000806c <_msp430_run_array>:
    806c:	05 94       	cmp	r4,	r5	;

0000806e <.Loc.246.1>:
    806e:	05 24       	jz	$+12     	;abs 0x807a

00008070 <.Loc.247.1>:
    8070:	27 44       	mov	@r4,	r7	;

00008072 <.Loc.248.1>:
    8072:	04 56       	add	r6,	r4	;

00008074 <.Loc.249.1>:
    8074:	a7 12       	call	@r7		;

00008076 <.Loc.250.1>:
    8076:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x806c

0000807a <_msp430_run_done>:
    807a:	30 41       	ret			

0000807c <L0>:
    807c:	30 41       	ret			
    807e:	30 41       	ret			

00008080 <deregister_tm_clones>:
    8080:	3c 40 c6 82 	mov	#33478,	r12	;#0x82c6
    8084:	3c 90 c6 82 	cmp	#33478,	r12	;#0x82c6
    8088:	07 24       	jz	$+16     	;abs 0x8098
    808a:	3d 40 00 00 	mov	#0,	r13	;
    808e:	0d 93       	cmp	#0,	r13	;r3 As==00
    8090:	03 24       	jz	$+8      	;abs 0x8098
    8092:	3c 40 c6 82 	mov	#33478,	r12	;#0x82c6
    8096:	8d 12       	call	r13		;

00008098 <.L1>:
    8098:	30 41       	ret			

0000809a <register_tm_clones>:
    809a:	0a 12       	push	r10		;
    809c:	3a 40 c6 82 	mov	#33478,	r10	;#0x82c6
    80a0:	3a 80 c6 82 	sub	#33478,	r10	;#0x82c6
    80a4:	0a 11       	rra	r10		;
    80a6:	0c 4a       	mov	r10,	r12	;
    80a8:	b0 12 8e 81 	call	#33166		;#0x818e
    80ac:	0c 5a       	add	r10,	r12	;
    80ae:	0d 4c       	mov	r12,	r13	;
    80b0:	0d 11       	rra	r13		;
    80b2:	0d 93       	cmp	#0,	r13	;r3 As==00
    80b4:	07 24       	jz	$+16     	;abs 0x80c4
    80b6:	3e 40 00 00 	mov	#0,	r14	;
    80ba:	0e 93       	cmp	#0,	r14	;r3 As==00
    80bc:	03 24       	jz	$+8      	;abs 0x80c4
    80be:	3c 40 c6 82 	mov	#33478,	r12	;#0x82c6
    80c2:	8e 12       	call	r14		;

000080c4 <.L9>:
    80c4:	3a 41       	pop	r10		;
    80c6:	30 41       	ret			

000080c8 <__do_global_dtors_aux>:
    80c8:	0a 12       	push	r10		;
    80ca:	09 12       	push	r9		;
    80cc:	c2 93 08 40 	cmp.b	#0,	&0x4008	;r3 As==00
    80d0:	17 20       	jnz	$+48     	;abs 0x8100
    80d2:	3a 40 0e 80 	mov	#32782,	r10	;#0x800e
    80d6:	3a 80 0c 80 	sub	#32780,	r10	;#0x800c
    80da:	0a 11       	rra	r10		;
    80dc:	3a 53       	add	#-1,	r10	;r3 As==11
    80de:	39 40 0c 80 	mov	#32780,	r9	;#0x800c

000080e2 <.L19>:
    80e2:	1c 42 0a 40 	mov	&0x400a,r12	;0x400a
    80e6:	0c 9a       	cmp	r10,	r12	;
    80e8:	0d 28       	jnc	$+28     	;abs 0x8104
    80ea:	b0 12 80 80 	call	#32896		;#0x8080
    80ee:	3d 40 00 00 	mov	#0,	r13	;
    80f2:	0d 93       	cmp	#0,	r13	;r3 As==00
    80f4:	03 24       	jz	$+8      	;abs 0x80fc
    80f6:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    80fa:	8d 12       	call	r13		;

000080fc <.L21>:
    80fc:	d2 43 08 40 	mov.b	#1,	&0x4008	;r3 As==01

00008100 <.L17>:
    8100:	30 40 88 81 	br	#0x8188		;

00008104 <.L20>:
    8104:	1c 53       	inc	r12		;
    8106:	82 4c 0a 40 	mov	r12,	&0x400a	;
    810a:	0c 5c       	rla	r12		;
    810c:	0c 59       	add	r9,	r12	;
    810e:	2c 4c       	mov	@r12,	r12	;
    8110:	8c 12       	call	r12		;
    8112:	30 40 e2 80 	br	#0x80e2		;

00008116 <call___do_global_dtors_aux>:
    8116:	3e 40 00 00 	mov	#0,	r14	;
    811a:	0e 93       	cmp	#0,	r14	;r3 As==00
    811c:	05 24       	jz	$+12     	;abs 0x8128
    811e:	3d 40 0c 40 	mov	#16396,	r13	;#0x400c
    8122:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    8126:	8e 12       	call	r14		;

00008128 <.L27>:
    8128:	b0 12 9a 80 	call	#32922		;#0x809a
    812c:	30 41       	ret			

0000812e <dummy_wait>:
#include <stdio.h>
#include <stdlib.h>

#define  QWARK_CTL      (*(volatile unsigned int  *) 0x0190)

void dummy_wait(){
    812e:	21 83       	decd	r1		;

00008130 <.LCFI0>:
	volatile int i=0;
    8130:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00

00008134 <.Loc.13.1>:

	for(i=0;i<500;i++);
    8134:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    8138:	30 40 44 81 	br	#0x8144		;

0000813c <.L3>:
    813c:	2c 41       	mov	@r1,	r12	;
    813e:	1c 53       	inc	r12		;
    8140:	81 4c 00 00 	mov	r12,	0(r1)	;

00008144 <.L2>:
    8144:	2d 41       	mov	@r1,	r13	;
    8146:	3c 40 f3 01 	mov	#499,	r12	;#0x01f3
    814a:	0c 9d       	cmp	r13,	r12	;
    814c:	f7 37       	jge	$-16     	;abs 0x813c

0000814e <.Loc.15.1>:

}
    814e:	03 43       	nop			
    8150:	21 53       	incd	r1		;
    8152:	30 41       	ret			

00008154 <main>:
int main()
{

	//Enable Idempotency Tracking

	QWARK_CTL = 0x01;
    8154:	3c 40 90 01 	mov	#400,	r12	;#0x0190
    8158:	9c 43 00 00 	mov	#1,	0(r12)	;r3 As==01

0000815c <.Loc.29.1>:
	

	if(redirected){
    815c:	1c 42 04 40 	mov	&0x4004,r12	;0x4004
    8160:	0c 93       	cmp	#0,	r12	;r3 As==00
    8162:	03 24       	jz	$+8      	;abs 0x816a

00008164 <.Loc.30.1>:
	  redirected = 3;
    8164:	b2 40 03 00 	mov	#3,	&0x4004	;
    8168:	04 40 

0000816a <.L5>:
	}
	
	var1 = redirected;
    816a:	1c 42 04 40 	mov	&0x4004,r12	;0x4004
    816e:	82 4c 1c 40 	mov	r12,	&0x401c	;

00008172 <.Loc.36.1>:


	QWARK_CTL = 0x00;
    8172:	3c 40 90 01 	mov	#400,	r12	;#0x0190
    8176:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00

0000817a <.L6>:

	//liveness

	while(1);
    817a:	30 40 7a 81 	br	#0x817a		;

0000817e <__mspabi_func_epilog_7>:
    817e:	34 41       	pop	r4		;

00008180 <__mspabi_func_epilog_6>:
    8180:	35 41       	pop	r5		;

00008182 <__mspabi_func_epilog_5>:
    8182:	36 41       	pop	r6		;

00008184 <__mspabi_func_epilog_4>:
    8184:	37 41       	pop	r7		;

00008186 <__mspabi_func_epilog_3>:
    8186:	38 41       	pop	r8		;

00008188 <__mspabi_func_epilog_2>:
    8188:	39 41       	pop	r9		;

0000818a <__mspabi_func_epilog_1>:
    818a:	3a 41       	pop	r10		;
    818c:	30 41       	ret			

0000818e <__mspabi_srli_15>:
    818e:	12 c3       	clrc			
    8190:	0c 10       	rrc	r12		;

00008192 <__mspabi_srli_14>:
    8192:	12 c3       	clrc			
    8194:	0c 10       	rrc	r12		;

00008196 <__mspabi_srli_13>:
    8196:	12 c3       	clrc			
    8198:	0c 10       	rrc	r12		;

0000819a <__mspabi_srli_12>:
    819a:	12 c3       	clrc			
    819c:	0c 10       	rrc	r12		;

0000819e <__mspabi_srli_11>:
    819e:	12 c3       	clrc			
    81a0:	0c 10       	rrc	r12		;

000081a2 <__mspabi_srli_10>:
    81a2:	12 c3       	clrc			
    81a4:	0c 10       	rrc	r12		;

000081a6 <__mspabi_srli_9>:
    81a6:	12 c3       	clrc			
    81a8:	0c 10       	rrc	r12		;

000081aa <__mspabi_srli_8>:
    81aa:	12 c3       	clrc			
    81ac:	0c 10       	rrc	r12		;

000081ae <__mspabi_srli_7>:
    81ae:	12 c3       	clrc			
    81b0:	0c 10       	rrc	r12		;

000081b2 <__mspabi_srli_6>:
    81b2:	12 c3       	clrc			
    81b4:	0c 10       	rrc	r12		;

000081b6 <__mspabi_srli_5>:
    81b6:	12 c3       	clrc			
    81b8:	0c 10       	rrc	r12		;

000081ba <__mspabi_srli_4>:
    81ba:	12 c3       	clrc			
    81bc:	0c 10       	rrc	r12		;

000081be <__mspabi_srli_3>:
    81be:	12 c3       	clrc			
    81c0:	0c 10       	rrc	r12		;

000081c2 <__mspabi_srli_2>:
    81c2:	12 c3       	clrc			
    81c4:	0c 10       	rrc	r12		;

000081c6 <__mspabi_srli_1>:
    81c6:	12 c3       	clrc			
    81c8:	0c 10       	rrc	r12		;
    81ca:	30 41       	ret			

000081cc <.L11>:
    81cc:	3d 53       	add	#-1,	r13	;r3 As==11
    81ce:	12 c3       	clrc			
    81d0:	0c 10       	rrc	r12		;

000081d2 <__mspabi_srli>:
    81d2:	0d 93       	cmp	#0,	r13	;r3 As==00
    81d4:	fb 23       	jnz	$-8      	;abs 0x81cc
    81d6:	30 41       	ret			

000081d8 <__mspabi_srll_15>:
    81d8:	12 c3       	clrc			
    81da:	0d 10       	rrc	r13		;
    81dc:	0c 10       	rrc	r12		;

000081de <__mspabi_srll_14>:
    81de:	12 c3       	clrc			
    81e0:	0d 10       	rrc	r13		;
    81e2:	0c 10       	rrc	r12		;

000081e4 <__mspabi_srll_13>:
    81e4:	12 c3       	clrc			
    81e6:	0d 10       	rrc	r13		;
    81e8:	0c 10       	rrc	r12		;

000081ea <__mspabi_srll_12>:
    81ea:	12 c3       	clrc			
    81ec:	0d 10       	rrc	r13		;
    81ee:	0c 10       	rrc	r12		;

000081f0 <__mspabi_srll_11>:
    81f0:	12 c3       	clrc			
    81f2:	0d 10       	rrc	r13		;
    81f4:	0c 10       	rrc	r12		;

000081f6 <__mspabi_srll_10>:
    81f6:	12 c3       	clrc			
    81f8:	0d 10       	rrc	r13		;
    81fa:	0c 10       	rrc	r12		;

000081fc <__mspabi_srll_9>:
    81fc:	12 c3       	clrc			
    81fe:	0d 10       	rrc	r13		;
    8200:	0c 10       	rrc	r12		;

00008202 <__mspabi_srll_8>:
    8202:	12 c3       	clrc			
    8204:	0d 10       	rrc	r13		;
    8206:	0c 10       	rrc	r12		;

00008208 <__mspabi_srll_7>:
    8208:	12 c3       	clrc			
    820a:	0d 10       	rrc	r13		;
    820c:	0c 10       	rrc	r12		;

0000820e <__mspabi_srll_6>:
    820e:	12 c3       	clrc			
    8210:	0d 10       	rrc	r13		;
    8212:	0c 10       	rrc	r12		;

00008214 <__mspabi_srll_5>:
    8214:	12 c3       	clrc			
    8216:	0d 10       	rrc	r13		;
    8218:	0c 10       	rrc	r12		;

0000821a <__mspabi_srll_4>:
    821a:	12 c3       	clrc			
    821c:	0d 10       	rrc	r13		;
    821e:	0c 10       	rrc	r12		;

00008220 <__mspabi_srll_3>:
    8220:	12 c3       	clrc			
    8222:	0d 10       	rrc	r13		;
    8224:	0c 10       	rrc	r12		;

00008226 <__mspabi_srll_2>:
    8226:	12 c3       	clrc			
    8228:	0d 10       	rrc	r13		;
    822a:	0c 10       	rrc	r12		;

0000822c <__mspabi_srll_1>:
    822c:	12 c3       	clrc			
    822e:	0d 10       	rrc	r13		;
    8230:	0c 10       	rrc	r12		;
    8232:	30 41       	ret			

00008234 <.L12>:
    8234:	3e 53       	add	#-1,	r14	;r3 As==11
    8236:	12 c3       	clrc			
    8238:	0d 10       	rrc	r13		;
    823a:	0c 10       	rrc	r12		;

0000823c <__mspabi_srll>:
    823c:	0e 93       	cmp	#0,	r14	;r3 As==00
    823e:	fa 23       	jnz	$-10     	;abs 0x8234
    8240:	30 41       	ret			

00008242 <memmove>:
    8242:	0d 9c       	cmp	r12,	r13	;
    8244:	0a 28       	jnc	$+22     	;abs 0x825a

00008246 <.L5>:
    8246:	0f 4c       	mov	r12,	r15	;
    8248:	0e 5c       	add	r12,	r14	;

0000824a <.L3>:
    824a:	0e 9f       	cmp	r15,	r14	;
    824c:	0d 24       	jz	$+28     	;abs 0x8268

0000824e <.LVL3>:
    824e:	ef 4d 00 00 	mov.b	@r13,	0(r15)	;
    8252:	1f 53       	inc	r15		;

00008254 <.LVL4>:
    8254:	1d 53       	inc	r13		;
    8256:	30 40 4a 82 	br	#0x824a		;

0000825a <.L2>:
    825a:	0f 4d       	mov	r13,	r15	;
    825c:	0f 5e       	add	r14,	r15	;
    825e:	0c 9f       	cmp	r15,	r12	;
    8260:	f2 2f       	jc	$-26     	;abs 0x8246

00008262 <.L4>:
    8262:	3e 53       	add	#-1,	r14	;r3 As==11

00008264 <.LVL7>:
    8264:	3e 93       	cmp	#-1,	r14	;r3 As==11
    8266:	01 20       	jnz	$+4      	;abs 0x826a

00008268 <.L10>:
    8268:	30 41       	ret			

0000826a <.L6>:
    826a:	0b 4c       	mov	r12,	r11	;
    826c:	0b 5e       	add	r14,	r11	;
    826e:	0f 4d       	mov	r13,	r15	;
    8270:	0f 5e       	add	r14,	r15	;
    8272:	eb 4f 00 00 	mov.b	@r15,	0(r11)	;
    8276:	30 40 62 82 	br	#0x8262		;

0000827a <memset>:
    827a:	0f 4c       	mov	r12,	r15	;
    827c:	0e 5c       	add	r12,	r14	;

0000827e <.L2>:
    827e:	0f 9e       	cmp	r14,	r15	;
    8280:	01 20       	jnz	$+4      	;abs 0x8284

00008282 <.Loc.104.1>:
    8282:	30 41       	ret			

00008284 <.L3>:
    8284:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    8288:	1f 53       	inc	r15		;

0000828a <.LVL4>:
    828a:	30 40 7e 82 	br	#0x827e		;

0000828e <L0>:
    828e:	30 41       	ret			

00008290 <__do_global_ctors_aux>:
    8290:	0a 12       	push	r10		;
    8292:	3a 40 08 80 	mov	#32776,	r10	;#0x8008

00008296 <.L2>:
    8296:	2c 4a       	mov	@r10,	r12	;
    8298:	3c 93       	cmp	#-1,	r12	;r3 As==11
    829a:	02 20       	jnz	$+6      	;abs 0x82a0
    829c:	3a 41       	pop	r10		;
    829e:	30 41       	ret			

000082a0 <.L3>:
    82a0:	8c 12       	call	r12		;
    82a2:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    82a6:	30 40 96 82 	br	#0x8296		;

000082aa <call___do_global_ctors_aux>:
    82aa:	b0 12 16 81 	call	#33046		;#0x8116
    82ae:	b0 12 90 82 	call	#33424		;#0x8290

000082b2 <L0>:
    82b2:	b0 12 4e 80 	call	#32846		;#0x804e

000082b6 <.Loc.19.1>:
    82b6:	b0 12 40 80 	call	#32832		;#0x8040

000082ba <.Loc.20.1>:
    82ba:	30 41       	ret			

000082bc <__msp430_fini>:
    82bc:	b0 12 5c 80 	call	#32860		;#0x805c

000082c0 <L0>:
    82c0:	b0 12 c8 80 	call	#32968		;#0x80c8

000082c4 <L0>:
    82c4:	30 41       	ret			
