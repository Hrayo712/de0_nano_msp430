//----------------------------------------------------------------------------
// Copyright (C) 2009 , Olivier Girard
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the authors nor the names of its contributors
//       may be used to endorse or promote products derived from this software
//       without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
// OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
// THE POSSIBILITY OF SUCH DAMAGE
//
//----------------------------------------------------------------------------
//
// *File Name: omsp_watchdog.v
//
// *Module Description:
//                       Watchdog Timer
//
// *Author(s):
//              - Olivier Girard,    olgirard@gmail.com
//
//----------------------------------------------------------------------------
// $Rev$
// $LastChangedBy$
// $LastChangedDate$
//----------------------------------------------------------------------------
`ifdef OMSP_NO_INCLUDE
`else
`include "openMSP430_defines.v"
`endif

module  omsp_qwark (

	mckl,			// Master Clock (synchronized to EU and FE)
	puc_rst,		// PUC Reset    (synchronized to EU and FE)
	fe_addr,                // Front-end Memory Address Bus 	      (Logical Address)
	eu_addr,                // Execution Unit Memory Address Bus 	      (Logical Address)
    	fe_en,		        // Front-end Memory Address Bus Enable 	      (Active High)
	eu_en,			// Execution Unit Memory Address Bus Enable   (Active High)
);

// INPUTs
//=========
input	mckl;			// Master Clock (synchronized to EU and FE)
input	puc_rst;		// PUC Reset    (synchronized to EU and FE)
input	[`PMEM_MSB:0] fe_addr;  // Front-end Memory Address Bus 	      (Logical Address)
input	[`DMEM_MSB:0] eu_addr;  // Execution Unit Memory Address Bus 	      (Logical Address)
input   fe_en;		        // Front-end Memory Address Bus Enable 	      (Active High)
input	eu_en;			// Execution Unit Memory Address Bus Enable   (Active High)


//=============================================================================
// 1)  PARAMETER DECLARATION
//=============================================================================


//============================================================================
// 2)  REGISTER DECODER
//============================================================================

//always @ (posedge wdt_clk or posedge wdt_rst)
 // if (wdt_rst)  wdtcnt_clr_sync_dly <= 1'b0;
 // else          wdtcnt_clr_sync_dly <= wdtcnt_clr_sync;

//wire wdtqn_edge;
//wire wdtcnt_clr = (wdtcnt_clr_sync ^ wdtcnt_clr_sync_dly) | wdtqn_edge;

endmodule // omsp_qwark

`ifdef OMSP_NO_INCLUDE
`else
`include "openMSP430_undefines.v"
`endif
